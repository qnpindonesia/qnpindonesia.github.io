<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on QNP Blog</title>
    <link>https://qnpindonesia.github.io/tags/javascript/</link>
    <description>Recent content in javascript on QNP Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id</language>
    <lastBuildDate>Mon, 20 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://qnpindonesia.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cloud Build Series #1: Deploying application to Google Kubernetes Services with Cloud Build</title>
      <link>https://qnpindonesia.github.io/using-google-cloud-builds/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://qnpindonesia.github.io/using-google-cloud-builds/</guid>
      <description>By twahyono
Prerequisites  You have Google Cloud account login You have Google Cloud SDK installed locally Container registry to store your docker image Google Repo to connect to your source code in Github  Creating New Kubernetes Cluster Create new cluster with g1-small machine type. For this trial purpose we will use preemptible machine to keep the cost down. Preemptible means we are using spare capacity available from GCP to create node.</description>
    </item>
    
    <item>
      <title>Adding Timeout to Fetch API</title>
      <link>https://qnpindonesia.github.io/add-timeout-to-fetchapi/</link>
      <pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://qnpindonesia.github.io/add-timeout-to-fetchapi/</guid>
      <description>By twahyono
The goal We want to add timeout capability to already excellent Fetch API with something as simple as adding timeout parameter:
var resp = await fetch(someUrl);  to something like:
var resp = await fetch(someUrl,timeout);  Introducing AbortController It allows you to abort one or more web request when desired by sending abort signal to Fetch API. To create AbortController object do the following:
var abortCtrl = new AbortController(); var signal = abortCtrl.</description>
    </item>
    
  </channel>
</rss>