<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on QNP Blog</title>
    <link>https://qnpindonesia.github.io/</link>
    <description>Recent content in Blog on QNP Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id</language>
    <lastBuildDate>Thu, 16 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://qnpindonesia.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Add Timeout to Fetch API</title>
      <link>https://qnpindonesia.github.io/add-timeout-to-fetchapi/</link>
      <pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://qnpindonesia.github.io/add-timeout-to-fetchapi/</guid>
      <description>By twahyono
The goal We want to add timeout capability to already excellent Fetch API with something as simple as adding timeout parameter:
var resp = await fetch(someUrl);  to something like:
var resp = await fetch(someUrl,timeout);  Introducing AbortController It allows you to abort one or more web request when desired by sending abort signal to Fetch API. To create AbortController object do the following:
var abortCtrl = new AbortController(); var signal = abortCtrl.</description>
    </item>
    
    <item>
      <title>Memahami Jenis-Jenis Service Kubernetes</title>
      <link>https://qnpindonesia.github.io/understanding-kubernetes-services/</link>
      <pubDate>Tue, 16 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://qnpindonesia.github.io/understanding-kubernetes-services/</guid>
      <description>By twahyono
Apa itu Service? Kubernetes Service, di dalam artikel ini selanjutnya disebut service, digunakan untuk mengarahkan traffic ke aplikasi yang berada di kluster. Seperti diketahui di dalam kluster, pod secara dinamis dikelola oleh Kubernetes control plane, pod bisa muncul dan hilang karena proses penjadwalan dan autoscaling dan menyebabkan alamat IP pod berubah-ubah (ephemeral). Untuk memberikan akses yang konsisten terhadap aplikasi di sekumpulan pod tsb maka diperlukan bentuk service ini.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://qnpindonesia.github.io/about/</link>
      <pubDate>Sun, 14 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://qnpindonesia.github.io/about/</guid>
      <description>We are helping companies develop and run modern applications in the era of cloud native computing, from CI/CD pipeline, Microservices architecture, managing complex cloud infrastructure and resources, cost optimization and high velocity delivery. Choosing the right technologies and tools is never an easy task and require companies to not afraid of changes lest they will be left behind.
Head over to our website www.qnp.co.id to know more how we can help companies create, manage and run their enterprise applications with the leading edge technologies.</description>
    </item>
    
    <item>
      <title>Instalasi Helm pada Kluster Kubernetes</title>
      <link>https://qnpindonesia.github.io/helm-installation/</link>
      <pubDate>Sun, 14 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://qnpindonesia.github.io/helm-installation/</guid>
      <description>By twahyono
Apa itu Helm? Helm adalah package manager untuk Kubernetes, sebagaimana npm adalah package manager untuk JavaScript di dalam lingkungan Node.js atau seperti package manager Chocolatey untuk Windows. Helm memudahkan tim DevOps melakukan deployment aplikasi ke dalam kluster Kubernetes.
Helm sendiri terdiri dari dua bagian: Helm client (helm) dan Helm server (Tiller). Ikuti langkah-langkah di bawah ini untuk memasang Helm pada kluster Kubernetes anda.
Persiapan Awal  Kluster Kubernetes yang telah berjalan.</description>
    </item>
    
    <item>
      <title>Instalasi Istio pada Kluster Kubernetes</title>
      <link>https://qnpindonesia.github.io/istio-installation/</link>
      <pubDate>Sun, 14 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://qnpindonesia.github.io/istio-installation/</guid>
      <description>By twahyono
Apa itu Istio? Menurut dokumentasi, Istio adalah aplikasi yang membantu anda untuk menghubungkan, mengamankan, mengontrol dan memantau services (microservices). Istio mengatasi permasalahan kerumitan transisi dari aplikasi monolitik ke aplikasi terdistribusi dengan arsitektur microservices.
Ketika aplikasi berkembang kerumitan microservices semakin bertambah dan menyulitkan untuk mengelola dan memahami keterkaitan antara services satu dengan services lainnya. Dari sinilah istilah services mesh muncul. Istilah ini menggambarkan jaringan microservices yang membentuk suatu aplikasi dan interaksi antara services tsb.</description>
    </item>
    
  </channel>
</rss>